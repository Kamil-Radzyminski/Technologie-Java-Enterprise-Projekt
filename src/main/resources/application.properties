logging.level.root=INFO
### H2 DataSource properties
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:kr_database;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.platform=h2-console
#spring.datasource.data=classpath:/SQL/data.sql

spring.profiles.active=dev
spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#Thymeleaf properties
spring.thymeleaf.cache=false
# Check that the template exists before rendering it.
spring.thymeleaf.check-template=true
# Check that the templates location exists.
spring.thymeleaf.check-template-location=true
# Enable MVC Thymeleaf view resolution.
spring.thymeleaf.enabled=true
# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/
# In case i later use Web facet and place templates inside webapp/WEB-INF directory
#spring.thymeleaf.prefix=/templates/
# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8

# Log the SQL queries
logging.level.org.hibernate.SQL=DEBUG
# to log values too
logging.level.org.hibernate.type=trace
# Log more detailed info on values
logging.level.org.hibernate.type.descriptor.sql=TRACE
# Set the levels of various loggers
logging.level.org.springframework.web=info
logging.level.org.hibernate=info

# Logging levels for Web and SQL
logging.level.web=debug
logging.level.sql=debug
#logging.level.root=debug

# Set the location of a file to which to write the log
#logging.file.name=springo.log
##################################################
# Dump the queries to standard output
#spring.jpa.show-sql=true
# Pretty print the SQL queries
spring.jpa.properties.hibernate.format_sql=true